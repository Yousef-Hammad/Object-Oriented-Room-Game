#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\ \r\n\ \ to\ make\ it\ more\ interesting\!\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\ In\ addition,\ it\ also\ allows\r\n\ \ the\ player\ to\ navigate\ to\ the\ previouse\ room\ using\ 2\ different\ methods.\r\n\ \r\n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\r\n\ @version\ 2006.03.30\r\n\ \r\n\ @author\ Lynn\ Marshall\r\n\ @version\ October\ 21,\ 2012\r\n\ \r\n\ @author\ Yousef\ Hammad\ 101217858\r\n\ @version\ March\ 18,\ 2023\ Assignment\ 2\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialize\ its\ internal\ map.\ As\ well,\ initialize\ \r\n\ previousRoom\ and\ stackpreviousRoom\ for\ the\ "back"\ and\ "stackBack"\r\n\ commands\ \r\n
comment10.params=
comment10.target=void\ printRoomAndCarry()
comment10.text=\ \r\n\ Print\ a\ descprition\ of\ the\ room\ along\ with\ the\ items\ the\ player\ is\ carrying\r\n\r\n
comment11.params=command
comment11.target=void\ eat(Command)
comment11.text=\ \r\n"eat"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\ if\ no\ other\r\ncommand\ was\ entered\ as\ well.\ Otherwise,\ print\ the\ message\ stating\ that\ \r\nthe\ player\ has\ eaten.\r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
comment12.params=command
comment12.target=void\ back(Command)
comment12.text=\ \r\n"back"\ was\ entered.\ navigate\ to\ the\ last\ visited\ room\ in\ the\ game\r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
comment13.params=command
comment13.target=void\ stackBack(Command)
comment13.text=\ \r\n"stackBack"\ was\ entered.\ Navigate\ back\ one\ room\ at\ a\ time\ until\ the\r\nbeginning\ of\ the\ game\r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
comment14.params=command
comment14.target=void\ take(Command)
comment14.text=\ \r\ntake\ allows\ the\ player\ to\ grab\ any\ single\ item\ that\ is\ inside\ a\ given\ room.\ The\r\nitem\ MUST\ be\ in\ the\ room\ for\ the\ player\ to\ grab\ it.\ \r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
comment15.params=command
comment15.target=void\ drop(Command)
comment15.text=\ \r\ndrop\ allows\ the\ players\ to\ drop\ the\ current\ item\ that\ they\ are\ holding.\ Dropping\r\nan\ item\ will\ store\ it\ in\ the\ given\ rooms\ item's\ list.\r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
comment16.params=command
comment16.target=void\ beamerCharge(Command)
comment16.text=\ \r\nMethod\ to\ charge\ the\ beamer\ inside\ a\ given\ room\r\n\r\n@param\ command\ The\ command\ to\ be\ proccessed\r\n
comment17.params=command
comment17.target=void\ beamerFire(Command)
comment17.text=\ \r\nMethod\ to\ fire\ the\ beamer\ inside\ a\ given\ room\r\n\r\n@param\ command\ The\ command\ to\ be\ proccessed\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ a\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment7.params=command
comment7.target=void\ goRoom(Command)
comment7.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment8.params=command
comment8.target=boolean\ quit(Command)
comment8.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise\r\n
comment9.params=command
comment9.target=void\ look(Command)
comment9.text=\ \r\n\ "look"\ was\ entered.\ Check\ the\ rest\ of\ the\ commmand\ to\ see\ if\ no\ other\r\n\ command\ was\ entered\ as\ well.\ Otherwise,\ print\ the\ the\ details\ of\ the\ \r\n\ current\ room.\r\n\r\n@param\ command\ The\ command\ to\ be\ processed.\r\n
numComments=18
